When would you want to use a remote repository rather than keeping all your work
local?

    So often! e.g. working alone but across multiple devices, working with multiple people who are in different places. Sharing with others!

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Manage conflicts
    May not want to share e.g. branches that get discarded
    Similar to why use git commit and not have it autosave

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

	Clone - work on the repository that you take a copy of [e.g. Collaborator on proj]
	Branch - take the original repository off in a differrent direction [e.g. Testing some changes]
    Fork - copy of the original repository off in a different direction [e.g. Take the original off in a different direction]

What is the benefit of having a copy of the last known state of the remote
stored locally?

    Can work offline!

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Easier
        Setup? Git definitely takes time to learn and time to use
        Could use e.g. dropbox style where you just have one version of the file that people can access?
    Harder
        how on earth would you keep track of changes if people worked on something at the same time... have to always have a file "ownder"?

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Really useful in a collaborative environment when e.g. others are working on the master

Commands:

git remote  |    Show all remote locations for the repository
git remote add origin url |     Add a new remote location for the repository. Origin is the default name to use when you create only one remote location. Url should be the https url to the github repository.
git remove -v  |    Outputs the remote locations with verbose information (fetch and push urls)
git push origin master  |    Push the master branch to the remote location origin.
git pull origin master  |    Get the master branch from the remote location origin.
git pull origin master  |    = Git fetch origin + git merge master origin/master
git fetch origin  |    Get the changes from the remote location into the (hidden?) origin/master branch